/Users/angwang/miniforge3/lib/python3.12/site-packages/torch/optim/lr_scheduler.py:62: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(

Training model for joy
Validation features shape for joy: torch.Size([116, 5521])
Training Loop (joy):   0%|          | 1/401 [00:00<03:47,  1.76it/s]
Epoch 0 (joy):
Training Loss: 0.9656, Validation Loss: 0.9504
Macro F1: 0.6860

New best model for joy at epoch 0 with F1: 0.6860
Training Loop (joy):   1%|          | 4/401 [00:02<03:16,  2.03it/s]
New best model for joy at epoch 3 with F1: 0.7021
Training Loop (joy):   3%|▎         | 11/401 [00:07<06:07,  1.06it/s]
Epoch 10 (joy):
Training Loss: 0.0942, Validation Loss: 1.7414
Macro F1: 0.6623
Training Loop (joy):   3%|▎         | 14/401 [00:11<06:47,  1.05s/it]
New best model for joy at epoch 13 with F1: 0.7093
Training Loop (joy):   4%|▎         | 15/401 [00:12<06:44,  1.05s/it]
New best model for joy at epoch 14 with F1: 0.7159
Training Loop (joy):   4%|▍         | 17/401 [00:14<07:31,  1.18s/it]
New best model for joy at epoch 16 with F1: 0.7241
Training Loop (joy):   5%|▌         | 21/401 [00:19<07:24,  1.17s/it]
Epoch 20 (joy):
Training Loss: 0.0182, Validation Loss: 2.5828
Macro F1: 0.6778
Training Loop (joy):   7%|▋         | 27/401 [00:24<05:30,  1.13it/s]
New best model for joy at epoch 26 with F1: 0.7274
Training Loop (joy):   8%|▊         | 31/401 [00:28<05:54,  1.04it/s]
Epoch 30 (joy):
Training Loss: 0.0101, Validation Loss: 2.6692
Macro F1: 0.7021
Training Loop (joy):   9%|▉         | 36/401 [00:33<05:44,  1.06it/s]
Early stopping triggered at epoch 36

Loaded best model for joy from epoch 26 with F1: 0.7274

/var/folders/sx/hkqgssrx0jd_jb2_792hz_hm0000gp/T/ipykernel_47147/3040162064.py:98: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(f'./model_checkpoints/{emotion}_best.pth')
